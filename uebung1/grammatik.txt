Aufgabe 1.3: Theoretische Aufgabe: Grammatik

a) Erweiterte Backus Naur Form für die Taschenrechner-Grammatik

Eingabe = Ausdruck

Ausdruck = "(" Ausdruck ")";

<<<<<<< HEAD
Ausdruck = Ausdruck Operator Ausdruck;

Ausdruck = "round(" Ausdruck ")";

Ausdruck = Ausdruck Zwischenspeichern;

Ausdruck = Zahl | Konstanten | Speicherplatz;

=======
Ausdruck =| Ausdruck Operator Ausdruck

Ausdruck =| "round(" Ausdruck ")" 

Ausdruck =| Ausdruck Zwischenspeichern

Ausdruck =| Zahl | Konstanten | Speicherplatz
>>>>>>> c169986e351748c8f6b2836ba38d8b2bd55f7895

Speicherplatz = "M" Ziffer;

Zwischenspeichern = "->" Speicherplatz;


Konstanten = "pi" | "e";

Operator = "+" | "-" | "*" | "/" | "^" | "%";

Zahl = ["-"] (Ganzzahl | Kommazahl);

Ganzzahl = "0" | (ZifferAußerNull {Ziffer});

Kommazahl = Ganzzahl "," {Ziffer};

Ziffer = ZifferAußerNull | "0";

ZifferAußerNull = "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";

b) (((-25,321 -> M1) / (round(3 * pi) % 6)) -> M8) + M1

c)  
I.  ((1 + 1) - 3
    Die Terminalsymbole "(" und ")" werden nur im Schritt 
        Ausdruck = "(" Ausdruck ")"         und
        Ausdruck = "round(" Ausdruck ")" 
    hinzugefügt. In beiden Fällen wird jeweils eine Klammer hinzugefügt. Ein Wort, welches
    eine unterschiedliche Anzahl an öffnenden und schließenden Klammern beinhaltet, kann also 
    nicht durch die oben beschriebene Grammatik erstellt werden.

II. ungültiges Beispiel
    Buchstaben sind nicht in der Menge der Terminalsymbole enthalten.
